/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;
import quotes.bookQuote.Quote;
import quotes.bookQuote.QuoteAPI;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.*;
import java.lang.String;

public class App {
//Random
// public static String readingFile(FileReader path) throws IOException {
//     BufferedReader reader = new BufferedReader(path);
//     Gson gson = new Gson();

//     //TypeToken to retrieve the type information even at runtime.
// // I want this JSON to be translated to a List of Quote objects
//     List<Quote> quote = gson.fromJson(reader, new TypeToken<List<Quote>>() {
//     }.getType());
//     reader.close();
//     //from index 0-137
//     return quote.get((int) (Math.random() * (137 + 1) + 0)).toString();
// }

    public static void main(String[] args) throws IOException {

        // FileReader filePath = new FileReader("app/src/main/resources/recentquotes.json");
        // System.out.println(readingFile(filePath));

        String url = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";

        HttpURLConnection connection = (HttpURLConnection) new URL(url).openConnection();
        connection.setConnectTimeout(5000);
        connection.setReadTimeout(5000);

        int responseCode = connection.getResponseCode();

        if (responseCode == HttpURLConnection.HTTP_OK) {
            // HTTP CONNECT VERB
            // DELETE PUT POST GET OPTIONS HEAD PATCH
            connection.setRequestMethod("GET");

            System.out.println(connection);

            InputStreamReader inputStreamReader = new InputStreamReader(connection.getInputStream());
            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);

            String data = bufferedReader.readLine();
            System.out.println(data);

            bufferedReader.close();

            Gson gson = new Gson();
            QuoteAPI quote = gson.fromJson(data, QuoteAPI.class);
            System.out.println("Author >>> " + quote.getAuthor());
            System.out.println("Quote >>> " + quote.getText());
        } else {
            System.out.println("Request unable to processed");
        }
    }


}
